//@version=4
strategy("8x MA [LazyBear] Strategy", shorttitle="8xMA_Strategy_LB", overlay=true, initial_capital=100000)

// === Inputs ===
src = close
use_ema = input(false, "Use EMA (default: SMA)?")

ma1_p = input(8, title="MA1 Length")
ma2_p = input(13, title="MA2 Length")
ma3_p = input(41, title="MA3 Length")
ma4_p = input(200, title="MA4 Length")
ma5_p = input(243, title="MA5 Length")
ma6_p = input(300, title="MA6 Length")
ma7_p = input(500, title="MA7 Length")
ma8_p = input(700, title="MA8 Length")

exit_bars = input(20, "Exit after N bars", minval=1)

// === Risk Management ===
takeProfitPerc = input({{TP}}, title="Take Profit (%)")
stopLossPerc = input({{SL}}, title="Stop Loss (%)")

// === MA Calculation Function ===
ma(x, y) => use_ema ? ema(x, y) : sma(x, y)

ma1 = ma(src, ma1_p)
ma2 = ma(src, ma2_p)
ma3 = ma(src, ma3_p)
ma4 = ma(src, ma4_p)
ma5 = ma(src, ma5_p)
ma6 = ma(src, ma6_p)
ma7 = ma(src, ma7_p)
ma8 = ma(src, ma8_p)

// === Entry Conditions ===
ma1_cross_up   = crossover(ma1, ma2) or crossover(ma1, ma3) or crossover(ma1, ma4) or crossover(ma1, ma5) or crossover(ma1, ma6) or crossover(ma1, ma7) or crossover(ma1, ma8)
ma1_cross_down = crossunder(ma1, ma2) or crossunder(ma1, ma3) or crossunder(ma1, ma4) or crossunder(ma1, ma5) or crossunder(ma1, ma6) or crossunder(ma1, ma7) or crossunder(ma1, ma8)

// === Bar Index Tracking ===
var int long_entry_bar = na
var int short_entry_bar = na

// === Entry + Exit ===
if (ma1_cross_up)
    strategy.entry("Long", strategy.long)
    long_entry_bar := bar_index

if (ma1_cross_down)
    strategy.entry("Short", strategy.short)
    short_entry_bar := bar_index

// === Stop Loss / Take Profit ===
long_tp = close * (1 + takeProfitPerc / 100)
long_sl = close * (1 - stopLossPerc / 100)
short_tp = close * (1 - takeProfitPerc / 100)
short_sl = close * (1 + stopLossPerc / 100)

strategy.exit("Long Exit", from_entry="Long", limit=long_tp, stop=long_sl)
strategy.exit("Short Exit", from_entry="Short", limit=short_tp, stop=short_sl)

// === Time-based Exit ===
if (strategy.position_size > 0 and not na(long_entry_bar) and bar_index - long_entry_bar >= exit_bars)
    strategy.close("Long")
    long_entry_bar := na

if (strategy.position_size < 0 and not na(short_entry_bar) and bar_index - short_entry_bar >= exit_bars)
    strategy.close("Short")
    short_entry_bar := na

// === Plot MAs ===
plot(ma1, color=color.aqua, linewidth=2)
plot(ma2, color=color.orange, linewidth=2)
plot(ma3, color=color.maroon, linewidth=2)
plot(ma4, color=color.lime, linewidth=2)
plot(ma5, color=color.navy, linewidth=2)
plot(ma6, color=color.teal, linewidth=2)
plot(ma7, color=color.fuchsia, linewidth=2)
plot(ma8, color=color.green, linewidth=2)
