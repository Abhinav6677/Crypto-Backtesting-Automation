//@version=4
strategy("BB/KC Squeeze Strategy [LazyBear Modified]", shorttitle="SqueezeStrategy [LB]", overlay=true, default_qty_type=strategy.percent_of_equity, default_qty_value=10)

// === Inputs ===
length = input(20, minval=1, title="Length")
mult = input(1.0, minval=0.001, maxval=50, title="Multiplier Factor")
useTrueRange = input(false, title="Use True Range for KC")
startSAR = input(0.02, title="SAR Start")
incrementSAR = input(0.02, title="SAR Increment")
maximumSAR = input(0.2, title="SAR Maximum")

// === Bollinger Bands ===
source = close
basis = sma(source, length)
dev = mult * stdev(source, length)
upperBB = basis + dev
lowerBB = basis - dev
plot(basis, color=color.red, linewidth=2)
p1 = plot(upperBB, color=color.red, linewidth=2)
p2 = plot(lowerBB, color=color.red, linewidth=2)
fill(p1, p2, color=color.red, transp=70)

// === Keltner Channels ===
ma = ema(source, length)
range = useTrueRange ? tr : high - low
rangema = ema(range, length)
upperKC = ma + rangema * mult
lowerKC = ma - rangema * mult
plot(upperKC, color=color.lime, title="KC Upper")
plot(ma, color=color.lime, title="KC Basis")
plot(lowerKC, color=color.lime, title="KC Lower")
fill(plot(upperKC), plot(lowerKC), color=color.green, transp=80)

// === Squeeze Condition ===
inSqueeze = (upperBB < upperKC) and (lowerBB > lowerKC)
squeezeReleased = (upperBB > upperKC) and (lowerBB < lowerKC) and inSqueeze[1]

// === SAR ===
sarVal = sar(startSAR, incrementSAR, maximumSAR)
plot(sarVal, color=color.blue, style=plot.style_cross)

// === TP/SL Inputs for Automation ===
takeProfitPerc = {{TP}}
stopLossPerc = {{SL}}

// === Entry Conditions ===
longCondition = squeezeReleased and close > upperBB
shortCondition = squeezeReleased and close < lowerBB

// === Long Trade ===
if (longCondition)
    strategy.entry("Long", strategy.long)

longTP = strategy.position_avg_price * (1 + takeProfitPerc / 100)
longSL = strategy.position_avg_price * (1 - stopLossPerc / 100)
strategy.exit("Long TP/SL", from_entry="Long", limit=longTP, stop=longSL)

if (crossover(sarVal, close) or crossunder(close, basis))
    strategy.close("Long")

// === Short Trade ===
if (shortCondition)
    strategy.entry("Short", strategy.short)

shortTP = strategy.position_avg_price * (1 - takeProfitPerc / 100)
shortSL = strategy.position_avg_price * (1 + stopLossPerc / 100)
strategy.exit("Short TP/SL", from_entry="Short", limit=shortTP, stop=shortSL)

if (crossunder(sarVal, close) or crossover(close, basis))
    strategy.close("Short")

// === Visual Cue ===
bgcolor(inSqueeze ? color.yellow : (squeezeReleased ? color.blue : na), transp=85)
