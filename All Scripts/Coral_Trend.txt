//@version=5
strategy("Coral Trend Strategy [LazyBear]", overlay=true, 
     default_qty_type=strategy.percent_of_equity, 
     default_qty_value=100, 
     initial_capital=100000)

// === Inputs ===
src = close
sm = input.int(21, title="Smoothing Period")
cd = input.float(0.4, title="Constant D")
ebc = input.bool(false, title="Color Bars")
ribm = input.bool(false, title="Ribbon Mode")

// === PLACEHOLDER VALUES FOR AUTOMATION ===
stop_loss_sl = {{SL}}  // e.g., 0.15 for 15%
take_profit_tp = {{TP}}  // e.g., 0.30 for 30%

// === Constants ===
di = (sm - 1.0) / 2.0 + 1.0
c1 = 2 / (di + 1.0)
c2 = 1 - c1
c3 = 3.0 * (cd * cd + cd * cd * cd)
c4 = -3.0 * (2.0 * cd * cd + cd + cd * cd * cd)
c5 = 3.0 * cd + 1.0 + cd * cd * cd + 3.0 * cd * cd

// === Recursive Moving Averages ===
var float i1 = na
var float i2 = na
var float i3 = na
var float i4 = na
var float i5 = na
var float i6 = na

i1 := c1 * src + c2 * nz(i1[1])
i2 := c1 * i1 + c2 * nz(i2[1])
i3 := c1 * i2 + c2 * nz(i3[1])
i4 := c1 * i3 + c2 * nz(i4[1])
i5 := c1 * i4 + c2 * nz(i5[1])
i6 := c1 * i5 + c2 * nz(i6[1])

bfr = -cd * cd * cd * i6 + c3 * i5 + c4 * i4 + c5 * i3
bfrC = bfr > nz(bfr[1]) ? color.green : bfr < nz(bfr[1]) ? color.red : color.blue

// === Plotting ===
tc = ebc ? color.gray : bfrC
plot(ribm ? na : bfr, title="Trend", linewidth=3, style=plot.style_circles, color=tc)
bgcolor(ribm ? bfrC : na, transp=50)
barcolor(ebc ? bfrC : na)

// === Strategy Logic ===
longCondition = bfr > nz(bfr[1])
shortCondition = bfr < nz(bfr[1])

if (longCondition)
    strategy.entry("Long", strategy.long)
if (shortCondition)
    strategy.entry("Short", strategy.short)

// === Add Stop Loss & Take Profit ===
if (longCondition)
    strategy.exit("TP/SL Long", from_entry="Long", stop=close * (1 - stop_loss_sl), limit=close * (1 + take_profit_tp))

if (shortCondition)
    strategy.exit("TP/SL Short", from_entry="Short", stop=close * (1 + stop_loss_sl), limit=close * (1 - take_profit_tp))

// === Close Opposite Positions on Signal Change ===
strategy.close("Long", when=shortCondition)
strategy.close("Short", when=longCondition)
